[ -- Linux for Bopols --- ]
     document status: in progress, by etsibala_@_gmail.com

+++ System Information

~~ Display Serial Number / Device details
  # dmidecode

~~ Changing timezone
  # ln -fs /usr/share/zoneinfo/US/Pacific /etc/localtime

~~ Changing date
  # date 03121715201 (March 12, 2016 17:15)

~~ NTP information
  # ntpq -p or ntpq -c peers 
  # ntpstat; echo $?
  # ntpdate -q <ntpserver>

~~ Crontab Example
  # crontab -e
  */5 * * * * /usr/local/bin/cpu_mem-alert.sh > /dev/null 2>&1
  0 8 * * * /usr/automation/solaris-logcheck.sh send_mail > /dev/null 2>&1

~~ Uptime readable date
  $ date -d @$(( $(date +%s) - $(cut -f1 -d. /proc/uptime) ))

~~ Sample bypassing read-only ENV variables
  # exec env -u TMOUT bash
  Note: Clears TMOUT value and then open another bash shell
  
  
+++ User Management 

~~ Show user account settins
  # chage -l <username>
  
~~ Check lock/failure logins
   # pam_tally2 --user=<username>
   
~~ Unlock logins due to failure
   # pam_tally2 --user=<username> --reset
   
   
+++ Disk Management

~~ Rescan disk partition (/dev)
  # partprobe -s /dev/mpath/mpath13
  # kpartx -av /dev/mpath/mpath13

~~ Make ISO from a directory
  # mkisofs -o file.iso /root/data
  Note: This will create an iso file called "file.iso" containing the data inside "/root/data" directory
        Required package/command: mkisofs command
		
~~ Displaying local filesystem only in posix format
  # df --local -P

~~ Create a test file with file size
  # dd if=/dev/zero of=test.txt bs=32768 count=10000

~~ Create a test file with file size
  # postfix check

~~ Check for CPU IO wait process (uninterrupted process)
  # ps -eo state,pid,cmd | grep "^D"
  # iostat
  # lsof -o <PID>

~~ Enable CPU/Mem manually
  # echo 1 > /sys/devices/system/cpu/cpuX/online
  # find /sys/devices/system/memory/ -name state -exec grep -l offline {} \; | while read x; do echo online > $x; done

~~ Find WWID
  # scsi_id -gud /dev/sda
  # ls -l /dev/disk/by-id/* | grep sda

~~ How to Trigger Manual Dump
  # echo 1 > /proc/sys/kernel/sysrq
  # echo c > /proc/sysrq -trigger 

~~ Disk Write Test
  $ dd if=/dev/zero of=testfile bs=16k count=16384
  $ dd if=/dev/zero of=testfile bs=16k count=16384 conv=fsync

~~ Manage SWAP
  # swapon -s (show swap information)
  # free -m


+++ Network Management 
~~ Check for port user
  # lsof -i :5000 (check for port 5000)
  COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
  java    3394 root   27u  IPv4  19595      0t0  TCP *:commplex-main (LISTEN)


+++ Software Management

~~ Build a RPM package
  Required package: rpmdevtools
  # rpmdev-setuptree (this will create a directory structure under "rpmbuild" directory)
  # cp <package_name>.tar.gz rpmbuild/SOURCES (put the package file to create under "rpmbuild/SOURCES" directory)
  # cd SPECS
  # rpmdev-newspec <package_name>
  # vi <package_name>.spec (create the specs file and modify the content)
  # rpmbuild -ba <package_name>.spec (build the specs file)
	
	
